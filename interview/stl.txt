1、STL六大组件
	容器：数据结构，用来存放数据
	算法：常用算法
	迭代器：容器和算法之间的胶合剂，“泛型指针”（迭代器，智能指针）
	仿函数：一种重载了operator()的类，使得整个类的使用看上去像一个函数
	配置器：为容器分配并管理内存
	适配器：修改其他组件接口
	
2、容器
	vector
	底层为数组，支持随机访问，节点大小是动态的，支持小标访问。随机存取效率很高（O（1）），插入效率不高.
	扩容原理：以原大小的两倍配置一份新空间，将原空间数据拷贝过来，会导致迭代器失效
	
	list
	底层为双向链表，内存空间不连续，智能通过指针访问数据，插入删除高效，随机存取非常没有效率，使用于对象需要大量删除插入操作的环境
	
	deque
	双向队列，一个中央控制器+多个缓冲区，支持收尾快速增删，支持随机访问
	
	stack / queue & priority_queue 
	底层为deque/list
	
	红黑树
	根节点是黑色，叶节点是黑色的null节点，任意节点到其叶节点经过的黑色节点数量是相同的。
	去除掉黑色null节点，红黑树是一层黑一层红。
	红黑树是近乎平衡的二叉搜索树，和平衡二叉搜索树相比，红黑树的平衡没有那么平衡，插入后可以保证调整三次之间可以使树达到平衡条件
	
	
	
	